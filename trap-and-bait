                                                                                 local WindUI=         
                                                                        loadstring(game:HttpGet(                        
                                                                                                                                  
                                                                                                                                        
                                                            "https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))(); 
                                                          local Window=WindUI:CreateWindow({Title="Silent Scripts",Author="Trap and Bait",  
                                                        Folder="CloudHub",Size=UDim2.fromOffset(580,460),Transparent=true,Theme="Dark",       
                                                      Resizable=true,SideBarWidth=200,BackgroundImageTransparency=0.42,HideSearchBar=false,     
                                                    ScrollBarEnabled=false,User={Enabled=true,Anonymous=false,Callback=function() print(          
                                                  "User clicked");end}});local MainTab=Window:Tab({Title="• Main",Icon="house"});local SectionGet1= 
                                                  MainTab:Section({Title="Rats",TextXAlignment="Left",TextSize=17});local toggleActive=false;local    
                                                Toggle=MainTab:Toggle({Title="Get Coins",Icon="check",Default=false,Callback=function(state)            
                                                toggleActive=state;if toggleActive then spawn(function() while toggleActive do local args={ -100};local   
                                              success,err=pcall(function() game:GetService("ReplicatedStorage"):WaitForChild("remotes"):WaitForChild(       
                                              "client"):WaitForChild("ui"):WaitForChild("abilities"):WaitForChild("request_rolls"):InvokeServer(unpack(args 
                                            ));end);if  not success then warn("InvokeServer Fehler:",err);end wait(0.01);end end);end end});local running=    
                                            false;local Toggle=MainTab:Toggle({Title="Get Cheese",Icon="check",Default=false,Callback=function(state) running=  
                                          state;print("Toggle Activated "   .. tostring(state) );if state then spawn(function() local args={"cheese"};local       
                                          remote=game:GetService("ReplicatedStorage"):WaitForChild("remotes"):WaitForChild("server"):WaitForChild("player"):        
                                          WaitForChild("onboarding");while running do remote:FireServer(unpack(args));wait(0);end end);end end});local                
                                          runningAutoSell=false;local AutoSellToggle=MainTab:Toggle({Title="Auto Sell Cheese",Icon="check",Default=false,Callback=    
                                        function(state) runningAutoSell=state;print("Auto Sell Cheese Activated "   .. tostring(state) );if state then spawn(function() 
                                         local remote=game:GetService("ReplicatedStorage"):WaitForChild(      --[[==============================]]"remotes"):WaitForChild 
                                        ("client"):WaitForChild("ui"):WaitForChild("dialogues"):    --[[============================================]]WaitForChild(       
                                        "request_sell_all");while runningAutoSell do remote:    --[[======================================================]]InvokeServer(); 
                                      wait(1);end end);end end});local SectionGet1=MainTab: --[[==========================================================]]Section({Title=   
                                      "Traps",TextXAlignment="Left",TextSize=17});local   --[[==============================================================]]trapNames={     
                                      "BearTrap","MineTrap","ShotgunTrap","CatapultTrap", --[[================================================================]]"SpikeTrap",    
                                      "AnvilTrap","CrushTrap","FlameTrap","AdminTrap",    --[[==================================================================]]"HackerTrap", 
                                      "MinigunTrap"};local TrapsDropdown=MainTab:Dropdown --[[==================================================================]]({Title="Traps"   
                                    ,Values=trapNames,Value={},Multi=true,AllowNone=true, --[[====================================================================]]Callback=     
                    function(selectedTraps) print("Ausgewählte Traps: "   .. game:        --[[====================================================================]]GetService(     
              "HttpService"):JSONEncode(selectedTraps) );end});local BuyButton=MainTab:   --[[======================================================================]]Button({Title 
            ="Buy Selected Trap",Locked=false,Callback=function() local ReplicatedStorage --[[======================================================================]]=game:        
          GetService("ReplicatedStorage");local remote=ReplicatedStorage:WaitForChild(    --[[======================================================================]]"remotes"):   
        WaitForChild("client"):WaitForChild("ui"):WaitForChild("traps"):WaitForChild(     --[[======================================================================]]              
        "request_new_state");local selectedTraps=TrapsDropdown:Get();if ( not             --[[======================================================================]]selectedTraps 
       or ( #selectedTraps==0)) then print("Keine Traps ausgewählt.");return;end for _,   --[[======================================================================]]trapName in   
      ipairs(selectedTraps) do local args={trapName};local success,err=pcall(function()     --[[==================================================================]]remote:         
      InvokeServer(unpack(args));end);if success then print("Trap gekauft: "   .. trapName  --[[================================================================]]);else warn(      
    "Fehler beim Kauf von "   .. trapName   .. ": "   .. tostring(err) );end wait(0.2);end  --[[==============================================================]]end});local       
    ShopTab=Window:Tab({Title="• Shop",Icon="coins",Locked=false});local runningAbilityRoll=  --[[==========================================================]]false;local         
    AbilityRollToggle=ShopTab:Toggle({Title="Ability Roll 10x",Icon="check",Default=false,      --[[====================================================]]Callback=function(state 
    ) runningAbilityRoll=state;print("Ability Roll 10x Activated "   .. tostring(state) );if      --[[==============================================]]state then spawn(function 
    () local args={10};local remote=game:GetService("ReplicatedStorage"):WaitForChild("remotes"):     --[[====================================]]WaitForChild("client"):       
    WaitForChild("ui"):WaitForChild("abilities"):WaitForChild("request_rolls");while runningAbilityRoll   --[[========================]]do remote:InvokeServer(unpack(args)); 
    wait(0);end end);end end});local runningAbilityRoll=false;local AbilityRollToggle=ShopTab:Toggle({Title="Ability Roll 5x",Icon="check",Default=false,Callback=function( 
  state) runningAbilityRoll=state;print("Ability Roll 5x Activated "   .. tostring(state) );if state then spawn(function() local args={5};local remote=game:GetService(   
  "ReplicatedStorage"):WaitForChild("remotes"):WaitForChild("client"):WaitForChild("ui"):WaitForChild("abilities"):WaitForChild("request_rolls");while                  
  runningAbilityRoll do remote:InvokeServer(unpack(args));wait(0);end end);end end});local runningAbilityRoll=false;local AbilityRollToggle=ShopTab:Toggle({Title=        
  "Ability Roll 1x",Icon="check",Default=false,Callback=function(state) runningAbilityRoll=state;print("Ability Roll 1x Activated "   .. tostring(state) );if state then  
  spawn(function() local args={1};local remote=game:GetService("ReplicatedStorage"):WaitForChild("remotes"):WaitForChild("client"):WaitForChild("ui"):WaitForChild(       
  "abilities"):WaitForChild("request_rolls");while runningAbilityRoll do remote:InvokeServer(unpack(args));wait(0);end end);end end});local MovementTab=Window:Tab({Title 
  ="• Movement",Icon="rocket"});MovementTab:Button({Title="Instant Steal",Callback=function() local ProximityPromptService=game:GetService("ProximityPromptService");if   
  fireproximityprompt then task.wait(0.1);local connection;connection=ProximityPromptService.PromptButtonHoldBegan:Connect(function(prompt) if (prompt.HoldDuration>0)    
  then prompt.HoldDuration=0;end fireproximityprompt(prompt);end);else warn("No instant ProximityPrompt support");end end});MovementTab:Toggle({Title="Fly",Default=false 
  ,Callback=function(state) local player=game.Players.LocalPlayer;local character=player.Character;if  not character then return;end local hrp=character:FindFirstChild(  
  "HumanoidRootPart");local humanoid=character:FindFirstChild("Humanoid");if ( not hrp or  not humanoid) then return;end if state then local bodyGyro=Instance.new(       
  "BodyGyro");bodyGyro.P=90000;bodyGyro.MaxTorque=Vector3.new(90000,90000,90000);bodyGyro.CFrame=hrp.CFrame;bodyGyro.Parent=hrp;local bodyVelocity=Instance.new(            
  "BodyVelocity");bodyVelocity.MaxForce=Vector3.new(90000,90000,90000);bodyVelocity.Velocity=Vector3.new(0,0,0);bodyVelocity.Parent=hrp;MovementTab.FlyParts={BodyGyro=     
  bodyGyro,BodyVelocity=bodyVelocity};local userInputService=game:GetService("UserInputService");local runService=game:GetService("RunService");local speed=150;local keys= 
  {W=false,A=false,S=false,D=false,Space=false,LeftControl=false};local function onInputBegan(input) if (input.UserInputType==Enum.UserInputType.Keyboard) then if (keys[   
  input.KeyCode.Name]~=nil) then keys[input.KeyCode.Name]=true;end end end local function onInputEnded(input) if (input.UserInputType==Enum.UserInputType.Keyboard) then if 
   (keys[input.KeyCode.Name]~=nil) then keys[input.KeyCode.Name]=false;end end end local conn1=userInputService.InputBegan:Connect(onInputBegan);local conn2=               
  userInputService.InputEnded:Connect(onInputEnded);local conn3;conn3=runService.Heartbeat:Connect(function() local moveVector=Vector3.new();if keys.W then moveVector=     
  moveVector + workspace.CurrentCamera.CFrame.LookVector ;end if keys.S then moveVector=moveVector-workspace.CurrentCamera.CFrame.LookVector ;end if keys.A then moveVector 
  =moveVector-workspace.CurrentCamera.CFrame.RightVector ;end if keys.D then moveVector=moveVector + workspace.CurrentCamera.CFrame.RightVector ;end if keys.Space then     
  moveVector=moveVector + Vector3.new(0,1,0) ;end if keys.LeftControl then moveVector=moveVector-Vector3.new(0,1,0) ;end if (moveVector.Magnitude>0) then moveVector=       
  moveVector.Unit * speed ;end MovementTab.FlyParts.BodyVelocity.Velocity=moveVector;MovementTab.FlyParts.BodyGyro.CFrame=workspace.CurrentCamera.CFrame;end);MovementTab.  
  FlyConnections={conn1,conn2,conn3};humanoid.PlatformStand=true;else if MovementTab.FlyConnections then for _,conn in pairs(MovementTab.FlyConnections) do conn:Disconnect 
  ();end MovementTab.FlyConnections=nil;end if MovementTab.FlyParts then for _,part in pairs(MovementTab.FlyParts) do part:Destroy();end MovementTab.FlyParts=nil;end if    
  humanoid then humanoid.PlatformStand=false;end end end});MovementTab:Toggle({Title="Inf Jump",Default=false,Callback=function(state) local player=game.Players.         
  LocalPlayer;if state then MovementTab.JumpConnection=game:GetService("UserInputService").JumpRequest:Connect(function() local character=player.Character;if  not        
  character then return;end local humanoid=character:FindFirstChildOfClass("Humanoid");if humanoid then humanoid:ChangeState(Enum.HumanoidStateType.Jumping);end end);    
    elseif MovementTab.JumpConnection then MovementTab.JumpConnection:Disconnect();MovementTab.JumpConnection=nil;end end});local walkSpeedSlider=MovementTab:Slider({    
    Title="WalkSpeed",Step=1,Value={Min=16,Max=120,Default=32},Callback=function(value) local player=game:GetService("Players").LocalPlayer;local humanoid=player.        
    Character and player.Character:FindFirstChildOfClass("Humanoid") ;if humanoid then humanoid.WalkSpeed=value;end end});local SettingsTab=Window:Tab({Title=            
    "• Settings",Icon="bird",Locked=false});SettingsTab:Toggle({Title="Anti Afk",Default=false,Callback=function(state) if state then print("Kick prevention activated"); 
      else print("Kick prevention deaktiviert");end end});SettingsTab:Button({Title="Join Discord",Icon="check",Callback=function() local InviteCode="FKU4vX3Awt";local 
       request=request or http_request or (http and http.request) or (syn and syn.request) ;local HttpService=game:GetService("HttpService");if request then pcall(     
      function() request({Url="http://127.0.0.1:6463/rpc?v=1",Method="POST",Headers={["Content-Type"]="application/json",Origin="https://discord.com"},Body=HttpService 
        :JSONEncode({cmd="INVITE_BROWSER",args={code=InviteCode},nonce=HttpService:GenerateGUID(false)})});end);else setclipboard("https://discord.gg/"   .. InviteCode 
         );end end});
